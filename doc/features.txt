* C++
* Functional programming style.
* Points
* Efficient affine transformations
* Rectangles
* Convex Hulls
* Bounded error
* General purpose paths:
- exact elliptical arcs
- area
- centroid and bending moments
* Path Locations
- determination of special spots (e.g. maximum curvature)
- splitting
- point, tangent, curvature at location
- efficient arc length and inverse arc length
* Path algebra
- computations such as offset curves can be written with their mathematical definition and still get a bounded error, efficient curve.  (preliminary trials indicate offset done this way out performs the method used in Inkscape)
- arbitrary distortion (with bounded error)
-- mesh distorts
-- computational distorts such as the GIMP's 'vortex' plugin
-- 3d mapping (perspective, flag, sphere)
* exact boolean ops (elliptic arcs remain elliptic arcs)
* efficient 2d database
* implicit function plotting
* NURBs input and output
* tunable path simplification
* PDoF constraint system for CAD/ CAGD